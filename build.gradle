// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        google()
        mavenCentral()
        mavenLocal()
//        maven {
//            url= uri('https://maven.pkg.github.com/YuanFengShan/FSUtils')
//            credentials {
//                username = project.findProperty("gpr.user") ?: System.getenv("github_user_name")
////                println "拿到的UserName:$username"
//                password = project.findProperty("gpr.key") ?: System.getenv("github_token")
////                println "拿到的password:$password"
//            }
//        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        google()
        mavenCentral()
        mavenLocal()
//        maven {
//            url =uri('https://maven.pkg.github.com/YuanFengShan/FSUtils')
//            credentials {
//                username = project.findProperty("gpr.user") ?: System.getenv("github_user_name")
////                println "拿到的UserName:$username"
//                password = project.findProperty("gpr.key") ?: System.getenv("github_token")
////                println "拿到的password:$password"
//            }
//        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
